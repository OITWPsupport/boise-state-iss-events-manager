{"version":3,"sources":["app.js","selectOnClickDirective.js","shortcodeFormDirective.js","controllers/MainCtrl.js","directives/loadingDirective.js","services/appService.js","services/dateService.js","services/eventService.js","services/googleApiService.js"],"names":["angular","module","filter","input","calendar","categories","forEach","category","parent","name","push","directive","restrict","link","scope","elem","on","this","select","PLUGIN_ROOT","templateUrl","loading","selectedCategories","viewType","shortcode","weekDefault","viewTypes","value","createShortcode","replace","trim","constant","CATEGORIES","DETAILS_URL","FEE","RECTRAC_URL","REGISTRATION_URL","REGISTRATION_DEADLINE","DATE_DESCRIPTION","collection","objectKey","output","keys","item","key","split","v","indexOf","controller","$scope","$timeout","appService","loadApp","undefined","gapi","client","setApiKey","appIsLoaded","data","init","d","fromJson","all","view","calendarId","eventId","detailsPage","settings","template","service","$http","$q","googleApiService","AT_SIGN_REPLACEMENT","config","children","childCategory","categoriesToDisplay","length","get","then","results","defaultView","icons","loadPromise","defer","c","runOnLoad","promise","resolve","pad","n","getDateString","date","format","timezone","dateString","moment","getDateTimeString","time","isDST","getDaysString","days","recurrenceDays","day","join","getEventStartForDisplay","event","start","dateTime","getEventEndForDisplay","end","getUrl","url","id","getGoogleCalUrl","description","googleCalUrl","googleStart","googleEnd","summary","location","s","formatForDisplay","startMoment","endMoment","duration","diff","allDay","isSame","title","recurrence","recurringEventId","registration","deadline","eventService","version","apiKey","getEvent","load","events","response","result","reject","getEvents","calendarIds","requestTime","promises","calendarEvents","list","singleEvents","timeMin","timeMax","items","thisEvent","sort","a","b","isAfter","getRecurrenceForEvent","callback","shift"],"mappings":"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","file":"dashboard-63895ff1.js","sourcesContent":["(function(){\n  'use strict';\n\n  angular.module('sharedResources', [])\n    .constant('PLUGIN_ROOT', '/wp-content/plugins/iss_events_manager')\n    .constant('SEPARATOR', '\\n\\n------------------------------\\n')\n    .constant('AT_SIGN_REPLACEMENT', '%%at%%')\n    .constant('FIELDS', {\n      CATEGORIES: 'Categories: ',\n      DETAILS_URL: 'Details URL: ',\n      FEE: 'Fee: ',\n      RECTRAC_URL: 'Registration URL: ',\n      REGISTRATION_URL: 'Registration URL: ',\n      REGISTRATION_DEADLINE: 'Registration deadline: ',\n      DATE_DESCRIPTION: 'Date description: '\n    })\n    .filter('unique', function() {\n      return function(collection, objectKey) {\n        var output = [],\n          keys = [];\n\n        angular.forEach(collection, function(item) {\n          var key = item;\n          angular.forEach(objectKey.split('.'), function(v){\n            key = key[v];\n          });\n          if(keys.indexOf(key) === -1) {\n            keys.push(key);\n            output.push(item);\n          }\n        });\n\n        return output;\n      };\n    });\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsAdminApp')\n    .directive('selectOnClick', function () {\n      return {\n        restrict: 'A',\n        link: function (scope, elem) {\n          elem.on('click', function () {\n            this.select();\n          });\n        }\n      };\n    });\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsAdminApp')\n    .directive('shortcodeForm', ['PLUGIN_ROOT', function (PLUGIN_ROOT) {\n      return {\n        templateUrl: PLUGIN_ROOT + '/templates/dashboard/shortcodeForm.html',\n        link: function(scope){\n          scope.loading = false;\n          scope.selectedCategories = [];\n          scope.viewType = '';\n          scope.shortcode = '';\n          scope.weekDefault = '';\n          scope.viewTypes = [\n            {name: 'List View', value: 'list'},\n            {name: 'Block View', value: 'block'},\n            {name: 'Details', value: 'details'}\n          ];\n\n          scope.createShortcode = function () {\n            if (scope.viewType === '') return;\n            scope.shortcode = '';\n            var categories = [];\n            angular.forEach(scope.selectedCategories, function (category) {\n              category = category.replace('-', '');\n              categories.push(category.trim());\n            });\n\n            if (scope.viewType == 'list') {\n              scope.shortcode = '[iss_events_manager view=\"list\"]';\n            } else if(scope.viewType == 'block'){\n              scope.shortcode = '[iss_events_manager view=\"block\"]';\n            } else if(scope.viewType == 'details'){\n              scope.shortcode = '[iss_events_manager view=\"details\"]';\n            }\n          };\n        }\n      };\n    }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('sharedResources')\n    .controller('MainCtrl', ['$scope', '$timeout', 'appService',\n      function ($scope, $timeout, appService) {\n        var data;\n        $scope.categories = [];\n        $scope.loading = true;\n\n        // Set data vardata\n        $scope.init = function(d){\n          data = angular.fromJson(d);\n          $scope.loading = false;\n          $scope.categories = data.categories.all;\n          $scope.view = data.view;\n          $scope.calendarId = data.calendarId;\n          $scope.eventId = data.eventId;\n          $scope.detailsPage = data.detailsPage;\n          $scope.settings = data.settings;\n          appService.init(data);\n          loadApp();\n        };\n\n        // Wait for gapi to load\n        function loadApp(){\n          $timeout(function(){\n            if(gapi === undefined || gapi.client === undefined || gapi.client.setApiKey === undefined){\n              loadApp();\n            } else {\n              appService.appIsLoaded();\n            }\n          }, 5);\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .directive('loading', function () {\n      return {\n        template: '<div class=\"bsuEventSpinner\"></loading>'\n      };\n    });\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .service('appService', ['$http', '$q', 'googleApiService', 'PLUGIN_ROOT', 'AT_SIGN_REPLACEMENT',\n      function ($http, $q, googleApiService, PLUGIN_ROOT, AT_SIGN_REPLACEMENT) {\n        var config, settings;\n        var loadPromise = $q.defer();\n\n        this.init = function(c){\n          config = c;\n        };\n\n        this.runOnLoad = function(){\n          return loadPromise.promise;\n        };\n\n        this.appIsLoaded = function(){\n          loadPromise.resolve(loadApp());\n        };\n\n        // Data passed from php\n        function loadApp() {\n          // Get categories\n          var categories = [];\n          angular.forEach(config.categories.all, function (category) {\n            categories.push({\n              name: category.name,\n              parent: category.name\n            });\n\n            angular.forEach(category.children, function (childCategory) {\n              categories.push({\n                name: childCategory,\n                parent: category.name\n              });\n            });\n          });\n\n          // Replace @ sign (WP theme tries removing this from url)\n          if(config.calendarId){\n            config.calendarId = config.calendarId.replace(AT_SIGN_REPLACEMENT, '@');\n          }\n\n          // Get categories to display\n          var view = config.categories.view;\n          var categoriesToDisplay = [];\n          if (view !== undefined && view.length > 0) {\n            categoriesToDisplay = view === 'all' ? categories : view.split(',');\n          }\n\n\n          return $http.get(PLUGIN_ROOT + '/config.json')\n            .then(function (results) {\n              googleApiService.init(results.data);\n              settings = {\n                settings: results.data,\n                config: {\n                  categories: categories,\n                  view: categoriesToDisplay,\n                  defaultView: config.defaultView,\n                  calendarId: config.calendarId,\n                  eventId: config.eventId,\n                  detailsPage: config.detailsPage\n                }\n              };\n              if(config.icons !== undefined){\n                settings.icons = config.icons;\n              }\n              return settings;\n            });\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .service('dateService', function () {\n\n      function pad(n) {\n        return n < 10 ? '0' + n : n;\n      }\n\n      this.getDateString = function (date, format, timezone) {\n        if (format === undefined) {\n          format = 'YYYY-MM-DD';\n        }\n        var dateString = moment(date, ['MM/DD/YYYY']).format(format);\n        if (timezone !== undefined) {\n          dateString += 'Z';// + (moment().isDST() ? '-06:00' : '-07:00');\n        }\n\n        return dateString;\n      };\n\n      this.getDateTimeString = function (date, time) {\n        var timezone = moment().isDST() ? '-06:00' : '-07:00';\n        return moment(pad(date) + pad(time), ['MM/DD/YYYY h:mma'])\n          .format('YYYY-MM-DDTHH:mm:ss' + timezone);\n      };\n\n      this.getDaysString = function(days) {\n        var recurrenceDays = [];\n        angular.forEach(days, function(day) {\n          switch (day) {\n            case 'MO':\n              recurrenceDays.push('M');\n              break;\n            case 'TU':\n              recurrenceDays.push('Tu');\n              break;\n            case 'WE':\n              recurrenceDays.push('W');\n              break;\n            case 'TH':\n              recurrenceDays.push('Th');\n              break;\n            case 'FR':\n              recurrenceDays.push('F');\n              break;\n            case 'SA':\n              recurrenceDays.push('Sa');\n              break;\n            case 'SU':\n              recurrenceDays.push('Su');\n              break;\n          }\n        });\n\n        return recurrenceDays.join('/');\n      };\n\n    });\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .service('eventService', ['AT_SIGN_REPLACEMENT',\n      function (AT_SIGN_REPLACEMENT) {\n        var settings;\n\n        this.init = function(s){\n          settings = s;\n        };\n\n        this.formatForDisplay = function(event, calendarId){\n          var description = event.description;\n\n          // Get start and end\n          var start = getEventStartForDisplay(event);\n          var end = getEventEndForDisplay(event);\n          var startMoment = moment(start, ['YYYY-MM-DDTHH:mm:ssZ']);\n          var endMoment = moment(end, ['YYYY-MM-DDTHH:mm:ssZ']);\n\n          return {\n            id: event.id,\n            calendarId: calendarId,\n            description: description,\n            location: event.location,\n            start: start,\n            startMoment: startMoment,\n            end: end,\n            duration: endMoment.diff(startMoment, 'minutes'),\n            allDay: startMoment.isSame(endMoment),\n            summary: event.summary,\n            title: event.summary,\n            categories: null,\n            url: getUrl(event, calendarId),\n            googleCalUrl: getGoogleCalUrl(event, calendarId, startMoment, endMoment, description),\n            recurrence: event.recurrence,\n            recurringEventId: event.recurringEventId,\n            registration: {\n              url: null,\n              deadline: null\n            }\n          };\n        };\n\n        function getEventStartForDisplay(event){\n          if(event.start.date !== undefined){\n            return event.start.date;\n          }\n          return event.start.dateTime;\n        }\n\n        function getEventEndForDisplay(event){\n          if(event.end.date !== undefined){\n            return event.end.date;\n          }\n          return event.end.dateTime;\n        }\n\n        function getUrl(event, calendarId){\n          var url = settings.detailsPage;\n          url += url.indexOf('?') > -1 ? '&' : '?';\n          url += 'id=' + event.id + '&cal=' + calendarId;\n          return url.replace('@', AT_SIGN_REPLACEMENT);\n        }\n\n        function getGoogleCalUrl(event, calendarId, start, end, description){\n          var googleCalUrl;\n          if(calendarId && event.id){\n            var googleStart = start.format('YYYYMMDDTHHmmss');\n            var googleEnd = end.format('YYYYMMDDTHHmmss');\n            googleCalUrl = \"http://www.google.com/calendar/event?action=TEMPLATE\" +\n            \"&text=\" + event.summary +\n            \"&dates=\" + googleStart + \"/\" + googleEnd +\n            \"&details=\" + description +\n            \"&location=\" + event.location +\n            \"&trp=false\";\n          }\n          return googleCalUrl;\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('sharedResources')\n    .service('googleApiService', ['$q', 'eventService',\n      function ($q, eventService) {\n        var version = 'v3';\n\n        this.init = function(settings){\n          gapi.client.setApiKey(settings.apiKey);\n          eventService.init(settings);\n        };\n\n        this.getEvent = function(calendarId, eventId) {\n          var defer = $q.defer();\n          if(!calendarId || !eventId){\n            defer.reject('Calendar not found.');\n            return defer.promise;\n          }\n          gapi.client.load('calendar', version).then(function(){\n            gapi.client.calendar.events.get({\n              'calendarId': calendarId,\n              'eventId': eventId\n            }).then(function(response){\n              var event = eventService.formatForDisplay(response.result, calendarId);\n              defer.resolve(event);\n            }, function(){\n              defer.reject('Error loading calendar event.');\n            });\n          });\n\n          return defer.promise;\n        };\n\n        this.getEvents = function(calendarIds, start, end){\n          var requestTime = moment();\n          var promises = [];\n          var calendarEvents = [];\n          return gapi.client.load('calendar', version)\n            .then(function(){\n              angular.forEach(calendarIds, function(calendarId){\n                if(calendarId !== null){\n                  var promise = gapi.client.calendar.events.list({\n                    'calendarId': calendarId,\n                    'singleEvents': true,\n                    'timeMin': start,\n                    'timeMax': end\n                  })\n                    .then(function(response){\n                      angular.forEach(response.result.items, function(event){\n                        var thisEvent = eventService.formatForDisplay(event, calendarId);\n                        calendarEvents.push(thisEvent);\n                      });\n                    });\n                  promises.push(promise);\n                }\n              });\n              return $q.all(promises)\n                .then(function(){\n                  calendarEvents = calendarEvents.sort(function(a, b){\n                    if(a.startMoment.isSame(b.startMoment)){\n                      return 0;\n                    } else if(a.startMoment.isAfter(b.startMoment)){\n                      return 1;\n                    } else {\n                      return -1;\n                    }\n                  });\n                  return {\n                    events: calendarEvents,\n                    requestTime: requestTime\n                  };\n                });\n            });\n        };\n\n        this.getRecurrenceForEvent = function(event, callback){\n          var defer = $q.defer();\n          if(event.recurrence === undefined && event.recurringEventId !== undefined){\n            gapi.client.load('calendar', version).then(function(){\n              gapi.client.calendar.events.get({\n                'calendarId': event.calendarId,\n                'eventId': event.recurringEventId\n              }).then(function(response){\n                defer.resolve(response.result.recurrence.shift());\n              }, function(){\n                defer.reject('Original recurring event not found.');\n              });\n            });\n          } else {\n            callback(event.recurrence);\n          }\n          return defer.promise;\n        };\n\n      }]);\n}());"],"sourceRoot":"/source/"}