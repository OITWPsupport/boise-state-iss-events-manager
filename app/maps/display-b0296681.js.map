{"version":3,"sources":["app.js","filters.js","controllers/EventsCtrl.js","directives/blockViewDirective.js","directives/detailsViewDirective.js","directives/listViewDirective.js","services/calendarService.js","controllers/MainCtrl.js","directives/loadingDirective.js","services/appService.js","services/dateService.js","services/eventService.js","services/googleApiService.js"],"names":["angular","module","filter","input","indexOf","split","moment","format","event","start","end","date","inputArray","Array","join","length","undefined","money","replace","classes","fitnessIcon","poolIcon","rockWallIcon","push","time","hours","Math","floor","minutes","events","forEach","add","deadline","title","$sce","trustAsHtml","substring","controller","$scope","appService","calendarService","lastRequestTime","fetchEvents","list","runOnLoad","then","data","staticEvents","settings","staticEventTitles","init","getEvents","isAfter","requestTime","eventsList","id","sort","a","b","startMoment","isSame","$apply","$on","directive","PLUGIN_ROOT","templateUrl","dateService","link","scope","getRecurrence","recurrence","days","pop","getDaysString","until","piece","sessionEndsOn","noEventFound","$emit","getEvent","recurringEventId","day","toUpperCase","service","$rootScope","$filter","googleApiService","getCalendarIds","calendarIds","calendars","calendar","views","name","getEventsForCalendars","c","startOf","clone","getDateTimeString","categories","this","d","config","view","trim","calendarId","eventId","getRecurrenceForEvent","constant","CATEGORIES","DETAILS_URL","FEE","RECTRAC_URL","REGISTRATION_URL","REGISTRATION_DEADLINE","DATE_DESCRIPTION","collection","objectKey","output","keys","item","key","v","$timeout","loadApp","gapi","client","setApiKey","appIsLoaded","loading","fromJson","all","detailsPage","template","$http","$q","AT_SIGN_REPLACEMENT","category","parent","children","childCategory","categoriesToDisplay","get","results","defaultView","icons","loadPromise","defer","promise","resolve","pad","n","getDateString","timezone","dateString","isDST","recurrenceDays","getEventStartForDisplay","dateTime","getEventEndForDisplay","getUrl","url","getGoogleCalUrl","description","googleCalUrl","googleStart","googleEnd","summary","location","s","formatForDisplay","endMoment","duration","diff","allDay","registration","eventService","version","apiKey","load","response","result","reject","promises","calendarEvents","singleEvents","timeMin","timeMax","items","thisEvent","callback","shift"],"mappings":"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","file":"display-b0296681.js","sourcesContent":["(function(){\n  'use strict';\n\n  angular.module('sharedResources', [])\n    .constant('PLUGIN_ROOT', '/wp-content/plugins/iss_events_manager')\n    .constant('SEPARATOR', '\\n\\n------------------------------\\n')\n    .constant('AT_SIGN_REPLACEMENT', '%%at%%')\n    .constant('FIELDS', {\n      CATEGORIES: 'Categories: ',\n      DETAILS_URL: 'Details URL: ',\n      FEE: 'Fee: ',\n      RECTRAC_URL: 'Registration URL: ',\n      REGISTRATION_URL: 'Registration URL: ',\n      REGISTRATION_DEADLINE: 'Registration deadline: ',\n      DATE_DESCRIPTION: 'Date description: '\n    })\n    .filter('unique', function() {\n      return function(collection, objectKey) {\n        var output = [],\n          keys = [];\n\n        angular.forEach(collection, function(item) {\n          var key = item;\n          angular.forEach(objectKey.split('.'), function(v){\n            key = key[v];\n          });\n          if(keys.indexOf(key) === -1) {\n            keys.push(key);\n            output.push(item);\n          }\n        });\n\n        return output;\n      };\n    });\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp', ['sharedResources'])\n\n    .filter('time', function(){\n      return function(input){\n        if(!input || input.indexOf('T') < 0 || input.indexOf('-') < 0) return;\n        input = input.split('T')[1].split('-')[0];\n        return moment(input, 'HH:mm:ss').format('h:mm a');\n      };\n    })\n    .filter('timeRange', function(){\n      return function(event){\n        if(!event) return;\n        var start = event.start;\n        var end = event.end;\n        if(start.indexOf('T') < 0 || start.indexOf('-') < 0) return;\n        if(end.indexOf('T') < 0 || end.indexOf('-') < 0) return;\n        start = start.split('T')[1].split('-')[0];\n        start = moment(start, 'HH:mm:ss').format('h:mm');\n        end = end.split('T')[1].split('-')[0];\n        end = moment(end, 'HH:mm:ss').format('h:mma');\n        return start + '-' + end;\n      };\n    })\n    .filter('date', function(){\n      return function(input){\n        if(!input) return;\n        var date;\n        if(input.indexOf('T') > -1){\n          var inputArray = input.split('T');\n          date = moment(inputArray[0], ['MM/DD', 'YYYY-MM-DD']);\n        } else {\n          date = moment(input, 'YYYY-MM-DD');\n        }\n        return date.format('MM/DD');\n      };\n    })\n    .filter('titleDate', function(){\n      return function(input){\n        if(!input) return;\n        var date;\n        if(input.indexOf('T') > -1){\n          var inputArray = input.split('T');\n          date = moment(inputArray[0], ['MM/DD', 'YYYY-MM-DD']);\n        } else {\n          date = moment(input, 'YYYY-MM-DD');\n        }\n        return date.format('MMM D');\n      };\n    })\n    .filter('fullDate', function(){\n      return function(input){\n        if(!input) return;\n        var date;\n        if(input.indexOf('T') > -1){\n          var inputArray = input.split('T');\n          date = moment(inputArray[0], ['MM/DD', 'YYYY-MM-DD']);\n        } else {\n          date = moment(input, ['YYYY-MM-DD', 'MM-DD-YYYY']);\n        }\n        return date.format('MMMM D, YYYY');\n      };\n    })\n    .filter('arrayToString', function(){\n      return function(input){\n        if(!input || !input instanceof Array) return;\n        return input.join(' ');\n      };\n    })\n    .filter('recurrenceDays', function(){\n      return function(input){\n        if(!input || input.length === 0) return;\n        return '(' + input.join('/') + ')';\n      };\n    })\n    .filter('fee', function(){\n      return function(input) {\n        if(!input) return;\n        if([undefined, '', 'Free', 'free', 0, '$0'].indexOf(input) > -1) return 'Free';\n        var money = input.replace('.00', '');\n        if(money.indexOf('$') === -1) money = '$' + money;\n        return money;\n      };\n    })\n    .filter('arrayToIconClasses', function(){\n      return function(classes){\n        if(!classes || !classes instanceof Array) return;\n        var fitnessIcon = 'icon-heattimer';\n        var poolIcon = 'icon-swimming1';\n        var rockWallIcon = 'icon-climbing';\n        if(classes.indexOf(fitnessIcon) === -1 && classes.indexOf('Fitness') > -1){\n          classes.push(fitnessIcon);\n        }\n        if(classes.indexOf(poolIcon) === -1 && classes.indexOf('Pool') > -1){\n          classes.push(poolIcon);\n        }\n        if(classes.indexOf(rockWallIcon) === -1 && classes.indexOf('Rock Wall') > -1){\n          classes.push(rockWallIcon);\n        }\n\n        return classes.join(' ');\n      };\n    })\n    .filter('minutesToTimeString', function(){\n      return function(input){\n        if(!input) return;\n        var time = '';\n        var hours = Math.floor(input / 60);\n        if(hours > 0){\n          time += hours;\n          time += hours > 1 ? ' hours' : ' hour';\n        }\n        var minutes = input % 60;\n        if(hours > 0 && minutes > 0){\n          time += ' & ';\n        }\n        if(minutes > 0){\n          time += minutes + ' minutes';\n        }\n        return time;\n      };\n    })\n    .filter('preventDuplicateDeadlines', function(){\n      return function(input){\n        if(!input) return;\n        var events = [];\n        angular.forEach(input, function(event){\n          var add = true;\n          angular.forEach(events, function(deadline){\n            if(add && deadline.title == event.title && deadline.start == event.start){\n              add = false;\n            }\n          });\n          if(add){\n            events.push(event);\n          }\n        });\n        return events;\n      };\n    })\n    .filter('trusted', ['$sce', function($sce){\n      return function(input){\n        if(!input) return;\n        return $sce.trustAsHtml(input);\n      };\n    }])\n    .filter('excerpt', function(){\n      return function(input, length){\n        if(!input) return;\n        if(input.length < length) return input;\n        return input.substring(0, length) + '...';\n      };\n    });\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .controller('EventsCtrl', ['$scope', 'appService', 'calendarService',\n      function ($scope, appService, calendarService) {\n        var lastRequestTime = moment();\n        var fetchEvents = true;\n        $scope.events = {\n          list: []\n        };\n\n        appService.runOnLoad()\n          .then(function(data){\n            // Get static events and static event titles\n            $scope.staticEvents = data.settings.staticEvents;\n            var staticEventTitles = [];\n            angular.forEach($scope.staticEvents, function(event){\n              staticEventTitles.push(event.title);\n            });\n\n            calendarService.init(data);\n            if(!fetchEvents) return;\n\n            calendarService.getEvents()\n              .then(function(data){\n                // Make sure our data is the newest requested\n                if(lastRequestTime.isAfter(data.requestTime)) return;\n                var eventsList = [];\n                // Prevent duplicates then sort by date\n                $scope.events.list = data.events.filter(function(event){\n                  if(eventsList.indexOf(event.id) > -1 || staticEventTitles.indexOf(event.title) > -1){\n                    return false;\n                  }\n                  eventsList.push(event.id);\n                  return true;\n                }).sort(function(a, b){\n                  if(a.startMoment.isSame(b.startMoment)) return 0;\n                  return a.startMoment.isAfter(b.startMoment) ? 1 : -1;\n                });\n\n                $scope.$apply();\n              });\n          });\n\n        $scope.$on('dontAutoFetchEvents', function(){\n          fetchEvents = false;\n        });\n\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .directive('blockView', ['PLUGIN_ROOT', function(PLUGIN_ROOT){\n      return {\n        templateUrl: PLUGIN_ROOT + '/templates/display/block.html'\n      };\n    }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .directive('detailsView', ['PLUGIN_ROOT', 'appService', 'calendarService', 'dateService',\n      function(PLUGIN_ROOT, appService, calendarService, dateService){\n        return {\n          templateUrl: PLUGIN_ROOT + '/templates/display/details.html',\n          link: function(scope){\n            scope.noEventFound = false;\n            scope.$emit('dontAutoFetchEvents');\n\n            appService.runOnLoad()\n              .then(function(data){\n                calendarService.init(data);\n                calendarService.getEvent()\n                  .then(function(event){\n                    scope.event = event;\n                    if(event.recurrence){\n                      scope.recurrence = event.recurrence;\n                    } else if(event.recurringEventId){\n                      getRecurrence(event);\n                    } else if(event !== undefined) {\n                      var day = [event.startMoment.format('dd').toUpperCase()];\n                      scope.recurrence = dateService.getDaysString(day);\n                    } else {\n                      scope.noEventFound = true;\n                    }\n                  }, function(){\n                    scope.noEventFound = true;\n                  });\n              });\n\n            function getRecurrence(event){\n              calendarService.getRecurrence(event)\n                .then(function(recurrence){\n                  if(recurrence){\n                    // Set recurrence\n                    var days = recurrence.split('BYDAY=').pop().split(',');\n                    scope.recurrence = dateService.getDaysString(days);\n                    // Set end of session if exists\n                    if(recurrence.indexOf('UNTIL') > -1){\n                      var until = '';\n                      angular.forEach(recurrence.split(';'), function(piece){\n                        if(piece.indexOf('UNTIL') > -1){\n                          until = piece;\n                        }\n                      });\n                      scope.sessionEndsOn = moment(until, 'YYYYMMDDTHHmmSSZ').format('MMMM D, YYYY');\n                    }\n                  }\n                });\n            }\n          }\n        };\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .directive('listView', ['PLUGIN_ROOT', function(PLUGIN_ROOT){\n      return {\n        templateUrl: PLUGIN_ROOT + '/templates/display/list.html'\n      };\n    }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .service('calendarService', [ '$rootScope', '$filter', 'googleApiService', 'dateService',\n      function ($rootScope, $filter, googleApiService, dateService) {\n        var data, settings, categories, calendarIds, views = [];\n\n        this.init = function(d){\n          data = d;\n          views = [\"ISS Events\"];\n          settings = data.settings;\n          angular.forEach(data.config.view, function(view){\n            views.push(view.trim());\n          });\n          categories = data.config.categories;\n          calendarIds = getCalendarIds();\n        };\n\n        this.getEvents = function(start, end){\n          return getEventsForCalendars(categories, start, end);\n        };\n\n        this.getEvent = function(){\n          return googleApiService.getEvent(data.config.calendarId, data.config.eventId);\n        };\n\n        this.getRecurrence = function(event){\n          return googleApiService.getRecurrenceForEvent(event);\n        };\n\n        function getCalendarIds(){\n          var calendarIds = [];\n          angular.forEach(settings.calendars, function(calendar){\n            if(views.indexOf(calendar.name) > -1) {\n              calendarIds.push(calendar.id);\n            }\n          });\n          return calendarIds;\n        }\n\n        function getEventsForCalendars(c, start, end){\n          // Get categories\n\n          // Get start and end dates, default start and end of this week\n          if(!start){\n            start = moment().startOf('week').startOf('day');\n          }\n          if(!end){\n            end = start.clone().add(2, 'months');\n          }\n          start = dateService.getDateTimeString(start.format('MM/DD/YYYY h:mma'));\n          end = dateService.getDateTimeString(end.format('MM/DD/YYYY h:mma'));\n          return googleApiService.getEvents(calendarIds, start, end);\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('sharedResources')\n    .controller('MainCtrl', ['$scope', '$timeout', 'appService',\n      function ($scope, $timeout, appService) {\n        var data;\n        $scope.categories = [];\n        $scope.loading = true;\n\n        // Set data vardata\n        $scope.init = function(d){\n          data = angular.fromJson(d);\n          $scope.loading = false;\n          $scope.categories = data.categories.all;\n          $scope.view = data.view;\n          $scope.calendarId = data.calendarId;\n          $scope.eventId = data.eventId;\n          $scope.detailsPage = data.detailsPage;\n          $scope.settings = data.settings;\n          appService.init(data);\n          loadApp();\n        };\n\n        // Wait for gapi to load\n        function loadApp(){\n          $timeout(function(){\n            if(gapi === undefined || gapi.client === undefined || gapi.client.setApiKey === undefined){\n              loadApp();\n            } else {\n              appService.appIsLoaded();\n            }\n          }, 5);\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .directive('loading', function () {\n      return {\n        template: '<div class=\"bsuEventSpinner\"></loading>'\n      };\n    });\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .service('appService', ['$http', '$q', 'googleApiService', 'PLUGIN_ROOT', 'AT_SIGN_REPLACEMENT',\n      function ($http, $q, googleApiService, PLUGIN_ROOT, AT_SIGN_REPLACEMENT) {\n        var config, settings;\n        var loadPromise = $q.defer();\n\n        this.init = function(c){\n          config = c;\n        };\n\n        this.runOnLoad = function(){\n          return loadPromise.promise;\n        };\n\n        this.appIsLoaded = function(){\n          loadPromise.resolve(loadApp());\n        };\n\n        // Data passed from php\n        function loadApp() {\n          // Get categories\n          var categories = [];\n          angular.forEach(config.categories.all, function (category) {\n            categories.push({\n              name: category.name,\n              parent: category.name\n            });\n\n            angular.forEach(category.children, function (childCategory) {\n              categories.push({\n                name: childCategory,\n                parent: category.name\n              });\n            });\n          });\n\n          // Replace @ sign (WP theme tries removing this from url)\n          if(config.calendarId){\n            config.calendarId = config.calendarId.replace(AT_SIGN_REPLACEMENT, '@');\n          }\n\n          // Get categories to display\n          var view = config.categories.view;\n          var categoriesToDisplay = [];\n          if (view !== undefined && view.length > 0) {\n            categoriesToDisplay = view === 'all' ? categories : view.split(',');\n          }\n\n\n          return $http.get(PLUGIN_ROOT + '/config.json')\n            .then(function (results) {\n              googleApiService.init(results.data);\n              settings = {\n                settings: results.data,\n                config: {\n                  categories: categories,\n                  view: categoriesToDisplay,\n                  defaultView: config.defaultView,\n                  calendarId: config.calendarId,\n                  eventId: config.eventId,\n                  detailsPage: config.detailsPage\n                }\n              };\n              if(config.icons !== undefined){\n                settings.icons = config.icons;\n              }\n              return settings;\n            });\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .service('dateService', function () {\n\n      function pad(n) {\n        return n < 10 ? '0' + n : n;\n      }\n\n      this.getDateString = function (date, format, timezone) {\n        if (format === undefined) {\n          format = 'YYYY-MM-DD';\n        }\n        var dateString = moment(date, ['MM/DD/YYYY']).format(format);\n        if (timezone !== undefined) {\n          dateString += 'Z';// + (moment().isDST() ? '-06:00' : '-07:00');\n        }\n\n        return dateString;\n      };\n\n      this.getDateTimeString = function (date, time) {\n        var timezone = moment().isDST() ? '-06:00' : '-07:00';\n        return moment(pad(date) + pad(time), ['MM/DD/YYYY h:mma'])\n          .format('YYYY-MM-DDTHH:mm:ss' + timezone);\n      };\n\n      this.getDaysString = function(days) {\n        var recurrenceDays = [];\n        angular.forEach(days, function(day) {\n          switch (day) {\n            case 'MO':\n              recurrenceDays.push('M');\n              break;\n            case 'TU':\n              recurrenceDays.push('Tu');\n              break;\n            case 'WE':\n              recurrenceDays.push('W');\n              break;\n            case 'TH':\n              recurrenceDays.push('Th');\n              break;\n            case 'FR':\n              recurrenceDays.push('F');\n              break;\n            case 'SA':\n              recurrenceDays.push('Sa');\n              break;\n            case 'SU':\n              recurrenceDays.push('Su');\n              break;\n          }\n        });\n\n        return recurrenceDays.join('/');\n      };\n\n    });\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .service('eventService', ['AT_SIGN_REPLACEMENT',\n      function (AT_SIGN_REPLACEMENT) {\n        var settings;\n\n        this.init = function(s){\n          settings = s;\n        };\n\n        this.formatForDisplay = function(event, calendarId){\n          var description = event.description;\n\n          // Get start and end\n          var start = getEventStartForDisplay(event);\n          var end = getEventEndForDisplay(event);\n          var startMoment = moment(start, ['YYYY-MM-DDTHH:mm:ssZ']);\n          var endMoment = moment(end, ['YYYY-MM-DDTHH:mm:ssZ']);\n\n          return {\n            id: event.id,\n            calendarId: calendarId,\n            description: description,\n            location: event.location,\n            start: start,\n            startMoment: startMoment,\n            end: end,\n            duration: endMoment.diff(startMoment, 'minutes'),\n            allDay: startMoment.isSame(endMoment),\n            summary: event.summary,\n            title: event.summary,\n            categories: null,\n            url: getUrl(event, calendarId),\n            googleCalUrl: getGoogleCalUrl(event, calendarId, startMoment, endMoment, description),\n            recurrence: event.recurrence,\n            recurringEventId: event.recurringEventId,\n            registration: {\n              url: null,\n              deadline: null\n            }\n          };\n        };\n\n        function getEventStartForDisplay(event){\n          if(event.start.date !== undefined){\n            return event.start.date;\n          }\n          return event.start.dateTime;\n        }\n\n        function getEventEndForDisplay(event){\n          if(event.end.date !== undefined){\n            return event.end.date;\n          }\n          return event.end.dateTime;\n        }\n\n        function getUrl(event, calendarId){\n          var url = settings.detailsPage;\n          url += url.indexOf('?') > -1 ? '&' : '?';\n          url += 'id=' + event.id + '&cal=' + calendarId;\n          return url.replace('@', AT_SIGN_REPLACEMENT);\n        }\n\n        function getGoogleCalUrl(event, calendarId, start, end, description){\n          var googleCalUrl;\n          if(calendarId && event.id){\n            var googleStart = start.format('YYYYMMDDTHHmmss');\n            var googleEnd = end.format('YYYYMMDDTHHmmss');\n            googleCalUrl = \"http://www.google.com/calendar/event?action=TEMPLATE\" +\n            \"&text=\" + event.summary +\n            \"&dates=\" + googleStart + \"/\" + googleEnd +\n            \"&details=\" + description +\n            \"&location=\" + event.location +\n            \"&trp=false\";\n          }\n          return googleCalUrl;\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('sharedResources')\n    .service('googleApiService', ['$q', 'eventService',\n      function ($q, eventService) {\n        var version = 'v3';\n\n        this.init = function(settings){\n          gapi.client.setApiKey(settings.apiKey);\n          eventService.init(settings);\n        };\n\n        this.getEvent = function(calendarId, eventId) {\n          var defer = $q.defer();\n          if(!calendarId || !eventId){\n            defer.reject('Calendar not found.');\n            return defer.promise;\n          }\n          gapi.client.load('calendar', version).then(function(){\n            gapi.client.calendar.events.get({\n              'calendarId': calendarId,\n              'eventId': eventId\n            }).then(function(response){\n              var event = eventService.formatForDisplay(response.result, calendarId);\n              defer.resolve(event);\n            }, function(){\n              defer.reject('Error loading calendar event.');\n            });\n          });\n\n          return defer.promise;\n        };\n\n        this.getEvents = function(calendarIds, start, end){\n          var requestTime = moment();\n          var promises = [];\n          var calendarEvents = [];\n          return gapi.client.load('calendar', version)\n            .then(function(){\n              angular.forEach(calendarIds, function(calendarId){\n                if(calendarId !== null){\n                  var promise = gapi.client.calendar.events.list({\n                    'calendarId': calendarId,\n                    'singleEvents': true,\n                    'timeMin': start,\n                    'timeMax': end\n                  })\n                    .then(function(response){\n                      angular.forEach(response.result.items, function(event){\n                        var thisEvent = eventService.formatForDisplay(event, calendarId);\n                        calendarEvents.push(thisEvent);\n                      });\n                    });\n                  promises.push(promise);\n                }\n              });\n              return $q.all(promises)\n                .then(function(){\n                  calendarEvents = calendarEvents.sort(function(a, b){\n                    if(a.startMoment.isSame(b.startMoment)){\n                      return 0;\n                    } else if(a.startMoment.isAfter(b.startMoment)){\n                      return 1;\n                    } else {\n                      return -1;\n                    }\n                  });\n                  return {\n                    events: calendarEvents,\n                    requestTime: requestTime\n                  };\n                });\n            });\n        };\n\n        this.getRecurrenceForEvent = function(event, callback){\n          var defer = $q.defer();\n          if(event.recurrence === undefined && event.recurringEventId !== undefined){\n            gapi.client.load('calendar', version).then(function(){\n              gapi.client.calendar.events.get({\n                'calendarId': event.calendarId,\n                'eventId': event.recurringEventId\n              }).then(function(response){\n                defer.resolve(response.result.recurrence.shift());\n              }, function(){\n                defer.reject('Original recurring event not found.');\n              });\n            });\n          } else {\n            callback(event.recurrence);\n          }\n          return defer.promise;\n        };\n\n      }]);\n}());"],"sourceRoot":"/source/"}